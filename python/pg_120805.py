# 파이썬 코딩테스트 연습 기록

# 1. 문제 정보
# - 문제 링크: https://school.programmers.co.kr/learn/courses/30/lessons/120805
# - 난이도: 하
# - 카테고리: 연산
# - 제한 시간: 1초
# - 메모리 제한: 128MB

# 2. 문제 설명
# - 요약: 두 정수 num1과 num2가 주어졌을 때, num1을 num2로 나눈 몫을 구하는 문제
# - 목표: solution 함수에서 num1 // num2 결과를 반환
# - 제약 조건:
#   - 0 < num1 ≤ 100
#   - 0 < num2 ≤ 100

# 3. 입출력 예시
# 입력 예시
# 10 5
# 출력 예시
# 2

# 추가 테스트 케이스
# 테스트 케이스 1:
# 입력: 7 2
# 기대 출력: 3

# 경계 케이스:
# 입력: 100 1
# 기대 출력: 100

# 4. 접근 방법
# - 초기 아이디어: 파이썬의 '//' 연산자를 사용
# - 알고리즘 선택 이유: //는 정수 나눗셈 연산, 연산 시간은 O(1)
# - 자료구조 선택 이유: 불필요함

# 5. 해결 과정
# 1단계: 문제 분석
# - 입력 범위가 작기 때문에 예외 상황 없음

# 2단계: 알고리즘 설계
# 1. num1, num2 입력
# 2. num1 // num2 계산 → answer
# 3. answer 반환

# 3단계: 코드 구현
def solution(num1, num2):
    # num1을 num2로 나눈 몫을 계산
    answer = num1 // num2
    return answer

if __name__ == "__main__":
    # 공백으로 구분된 두 정수를 입력받아 solution 함수 결과 출력
    num1, num2 = map(int, input().split())
    print(solution(num1, num2))

# 7. 대체 해결 방법
# 방법 1: 반복 뺄셈
# def solution(num1, num2):
#     count = 0
#     while num1 >= num2:
#         num1 -= num2
#         count += 1
#     return count

# 장점: 연산자 없이 구현 가능
# 단점: 비효율적일 수 있음
# 시간 복잡도: O(num1/num2)
# 공간 복잡도: O(1)

# 8. 코드 최적화
# - 연산 자체가 O(1) 이므로 최적화 불필요

# 9. 복잡도 분석
# 시간 복잡도: O(1)
# 공간 복잡도: O(1)

# 13. 실행 시간 및 메모리 사용량
# 실행 시간: 0.00ms
# 메모리 사용량: 약 9.2MB
# 시스템 환경: Python 3.9

# 16. 회고 및 학습 포인트
# - 배운 점: '//' 연산자를 활용한 정수 나눗셈 처리
# - 실수 방지: '/'와 '//' 구분 철저히
